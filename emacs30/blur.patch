diff --git a/src/nsfns.m b/src/nsfns.m
index fe20fddc636..581a16c7f4b 100644
--- a/src/nsfns.m
+++ b/src/nsfns.m
@@ -326,6 +326,12 @@ Turn the input menu (an NSMenu) into a lisp list for tracking on lisp side.
       else
           [[view window] setOpaque: YES];
 
+      NSVisualEffectView *effectView = view.window.contentView.subviews.firstObject;
+      if (effectView.subviews.count == 2) {
+        NSBox *titleView = effectView.subviews.lastObject;
+        titleView.fillColor = [col colorWithAlphaComponent: alpha];
+      }
+
       face = FRAME_DEFAULT_FACE (f);
       if (face)
         {
@@ -371,6 +377,14 @@ Turn the input menu (an NSMenu) into a lisp list for tracking on lisp side.
   f->alpha_background = alpha;
   [[view window] setBackgroundColor: [f->output_data.ns->background_color
 					 colorWithAlphaComponent: alpha]];
+
+  NSVisualEffectView *effectView = view.window.contentView.subviews.firstObject;
+  if (effectView.subviews.count == 2) {
+    NSBox *titleView = effectView.subviews.lastObject;
+    titleView.fillColor = [f->output_data.ns->background_color
+                              colorWithAlphaComponent: alpha];
+  }
+  
   recompute_basic_faces (f);
   SET_FRAME_GARBAGED (f);
 }
diff --git a/src/nsterm.m b/src/nsterm.m
index ef5bd884bc0..d59e407cb42 100644
--- a/src/nsterm.m
+++ b/src/nsterm.m
@@ -9252,10 +9252,7 @@ - (instancetype) initWithEmacsFrame: (struct frame *) f
 		 | NSWindowStyleMaskMiniaturizable
 		 | NSWindowStyleMaskClosable);

-  if (FRAME_UNDECORATED_ROUND (f))
-    {
-      styleMask |= NSFullSizeContentViewWindowMask;
-    }
+  styleMask |= NSWindowStyleMaskFullSizeContentView;

   last_drag_event = nil;

@@ -9248,7 +9248,61 @@ - (instancetype) initWithEmacsFrame: (struct frame *) f
       EmacsView *view = FRAME_NS_VIEW (f);
 
       [self setDelegate:view];
-      [[self contentView] addSubview:view];
+      /* View Hierarchy:
+         NSWindow
+         - NSVisualEffectView, extended under title bar
+           - titleBackgroundView, view under title bar to match emacs background
+           - boundingView, emacs looks at EmavsView's superview for frame size
+             - EmacsView, actual emacs content
+       */
+
+      NSVisualEffectView *blurView = [NSVisualEffectView alloc];
+      [blurView initWithFrame:
+          NSMakeRect (0, 0, FRAME_TEXT_COLS_TO_PIXEL_WIDTH (f, f->text_cols),
+                      FRAME_TEXT_LINES_TO_PIXEL_HEIGHT (f, f->text_lines))];
+      [blurView setAutoresizingMask: NSViewWidthSizable | NSViewHeightSizable];
+      blurView.blendingMode = NSVisualEffectBlendingModeBehindWindow;
+      blurView.material = NSVisualEffectMaterialHUDWindow;
+      blurView.emphasized = YES;
+      blurView.state = NSVisualEffectStateActive;
+
+      [[self contentView] addSubview:blurView];
+
+
+      NSView *boundingView = [[NSView alloc] initWithFrame:NSMakeRect (0, 0, 0, 0)];
+      [boundingView setAutoresizingMask: NSViewWidthSizable | NSViewHeightSizable];
+      [blurView addSubview:boundingView];
+      NSBox *titleBackgroundView;
+
+      NSLayoutGuide *layout = self.contentLayoutGuide;
+
+      boundingView.translatesAutoresizingMaskIntoConstraints = NO;
+      [boundingView.bottomAnchor constraintEqualToAnchor:layout.bottomAnchor].active = YES;
+      [boundingView.leftAnchor constraintEqualToAnchor:layout.leftAnchor].active = YES;
+      [boundingView.rightAnchor constraintEqualToAnchor:layout.rightAnchor].active = YES;
+
+      if (FRAME_UNDECORATED_ROUND (f))
+        [boundingView.topAnchor constraintEqualToAnchor:self.contentView.topAnchor].active = YES;
+      else
+        {
+          /* constraint emacs content under titlebar */
+          [boundingView.topAnchor constraintEqualToAnchor:layout.topAnchor].active = YES;
+
+          /* add separate view for titlebar background */
+          titleBackgroundView = [[NSBox alloc] initWithFrame:NSMakeRect (0, 0, 0, 0)];
+          [titleBackgroundView setAutoresizingMask: NSViewWidthSizable | NSViewHeightSizable];
+          [blurView addSubview:titleBackgroundView];
+          titleBackgroundView.boxType = NSBoxCustom;
+          titleBackgroundView.borderWidth = 0;
+          titleBackgroundView.transparent = NO;
+          titleBackgroundView.translatesAutoresizingMaskIntoConstraints = NO;
+          [titleBackgroundView.topAnchor constraintEqualToAnchor:self.contentView.topAnchor].active = YES;
+          [titleBackgroundView.bottomAnchor constraintEqualToAnchor:layout.topAnchor].active = YES;
+          [titleBackgroundView.leftAnchor constraintEqualToAnchor:layout.leftAnchor].active = YES;
+          [titleBackgroundView.rightAnchor constraintEqualToAnchor:layout.rightAnchor].active = YES;
+        }
+
+      [boundingView addSubview:view];
       [self makeFirstResponder:view];
 
 #if !defined (NS_IMPL_COCOA) || MAC_OS_X_VERSION_MIN_REQUIRED <= 1090
@@ -9302,6 +9356,12 @@ - (instancetype) initWithEmacsFrame: (struct frame *) f
       if (f->alpha_background != (EmacsCGFloat) 1.0)
         [self setOpaque:NO];
 
+      if (!FRAME_UNDECORATED_ROUND (f))
+        {
+          titleBackgroundView.fillColor =
+              [col colorWithAlphaComponent:f->alpha_background];
+        }
+
       /* toolbar support */
       [self createToolbar:f];
 
